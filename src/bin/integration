#!/usr/bin/env node
'use strict'

const path = require('path')
const Promise = require('bluebird-co')
const DependencyManager = require('five-bells-integration-test-loader').DependencyManager
const spawn = require('../util').spawn
const command = process.argv[2]
const dependencies = new DependencyManager({ defaultDependencies: {
  'five-bells-shared': 'interledgerjs/five-bells-shared',
  'ilp-routing': 'interledgerjs/ilp-routing',
  'five-bells-ledger': 'interledgerjs/five-bells-ledger',
  'ilp-connector': 'interledgerjs/ilp-connector',
  'five-bells-notary': 'interledgerjs/five-bells-notary',
  'ilp': 'interledgerjs/ilp',
  'ilp-core': 'interledgerjs/ilp-core',
  'ilp-plugin-bells': 'interledgerjs/ilp-plugin-bells',
  'ilp-kit': 'interledgerjs/ilp-kit',
  'ilp-plugin-virtual': 'interledgerjs/ilp-plugin-virtual'
}})
const commands = ['all', 'setup', 'test']
const mocha = path.resolve(require.resolve('mocha'), '../bin/mocha')

function mochaRun(testName) {
  return spawn(mocha, [
    path.resolve(__dirname, `../tests/${testName}.js`),
    '--no-timeouts',
    '-r', 'co-mocha'
  ], {
    cwd: dependencies.testDir,
    stdio: 'inherit'
  });
}

function usage () {
  console.error('usage: ' + process.argv[1] + ' <command> [<tests>]')
  console.error('commands:')
  console.error('  all    # setup then test')
  console.error('  setup  # download five-bells services')
  console.error('  test   # run integration tests')
  console.error('tests: space-separated list. Defaults to "index advanced connector_first ilp-kit"')
  process.exit(1)
}

if (commands.indexOf(command) === -1) usage()
Promise.coroutine(function * () {
  let code = 0
  if (command === 'all' || command === 'setup') {
    code = code || (yield dependencies.install())
  }
  let tests = process.argv.slice(3)
  if (tests.length === 0) {
    tests = ['index', 'advanced', 'connector_first', 'ilp-kit']
  }
  if (command === 'all' || command === 'test') {
    while (tests.length && !code) {
      code = code || (yield mochaRun(tests.shift()))
    }
  }
  process.exit(code)
})().done()
