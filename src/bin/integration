#!/usr/bin/env node
'use strict'

const path = require('path')
const Promise = require('bluebird-co')
const DependencyManager = require('five-bells-integration-test-loader').DependencyManager
const spawn = require('../util').spawn
const command = process.argv[2]
const dependencies = new DependencyManager({ defaultDependencies: {
  'five-bells-shared': 'interledgerjs/five-bells-shared',
  'ilp-routing': 'interledgerjs/ilp-routing',
  'five-bells-ledger': 'interledgerjs/five-bells-ledger',
  'ilp-connector': 'interledgerjs/ilp-connector',
  'five-bells-notary': 'interledgerjs/five-bells-notary',
  'ilp': 'interledgerjs/ilp',
  'ilp-core': 'interledgerjs/ilp-core',
  'ilp-plugin-bells': 'interledgerjs/ilp-plugin-bells',
  'ilp-kit': 'interledgerjs/ilp-kit',
  'ilp-plugin-virtual': 'interledgerjs/ilp-plugin-virtual'
}})
const commands = ['all', 'setup', 'test', 'test-without-ilp-kit']
const mocha = path.resolve(require.resolve('mocha'), '../bin/mocha')

function usage () {
  console.error('usage: ' + process.argv[1] + ' <command>')
  console.error('commands:')
  console.error('  all                    # setup then test')
  console.error('  setup                  # download five-bells services')
  console.error('  test                   # run integration tests')
  console.error('  test-without-ilp-kit   # run integration tests, except ILP kit tests')
  process.exit(1)
}

if (commands.indexOf(command) === -1) usage()
Promise.coroutine(function * () {
  let code = 0
  if (command === 'all' || command === 'setup') {
    code = code || (yield dependencies.install())
  }
  if (command === 'all' || command === 'test' ||
      command === 'test-without-ilp-kit') {
    const testFiles = [
      path.resolve(__dirname, '../tests/index.js'),
      path.resolve(__dirname, '../tests/advanced.js'),
      path.resolve(__dirname, '../tests/connector_first.js')
    ]
    if (command !== 'test-without-ilp-kit') {
      testFiles.push(path.resolve(__dirname, '../tests/ilp-kit.js'))
    }

    code = code || (yield spawn(mocha, testFiles.concat([
      '--no-timeouts',
      '-r', 'co-mocha'
    ]), {
      cwd: dependencies.testDir,
      stdio: 'inherit'
    }))
  } else if (command === 'test-without-ilp-kit') {

  }
  process.exit(code)
})().done()
